{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jeff\\\\thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ProgressBar.js\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  minutesToDuration,\n  focusTime,\n  focusCountdown,\n  breakTime,\n  breakCountdown,\n  progressBarValue,\n  progressBarWidth,\n  appStatus\n}) {\n  const pauseMessage = appStatus.includes(\"pause\") ? \"PAUSED\" : \"\";\n  const message = appStatus.includes(\"countingFocus\") || appStatus.includes(\"pauseFocus\") ? \"Focusing for \" : \"On Break for \";\n  const timeSetting = appStatus.includes(\"countingFocus\") || appStatus.includes(\"pauseFocus\") ? minutesToDuration(focusTime) : minutesToDuration(breakTime);\n  const remainingTime = appStatus.includes(\"countingFocus\") || appStatus.includes(\"pauseFocus\") ? focusCountdown : breakCountdown;\n\n  if (appStatus === \"setup\") {\n    return \"\";\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      \"data-testid\": \"session-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }\n    }, message, \" \", timeSetting, \" minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      \"data-testid\": \"session-sub-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, remainingTime, \" remaining\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, pauseMessage))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress\",\n      style: {\n        height: \"20px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"progress-bar\",\n      role: \"progressbar\",\n      \"aria-valuemin\": \"0\",\n      \"aria-valuemax\": \"100\",\n      \"aria-valuenow\": progressBarValue,\n      style: {\n        width: progressBarWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    })))));\n  }\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["C:/Users/Jeff/thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.js"],"names":["React","ProgressBar","minutesToDuration","focusTime","focusCountdown","breakTime","breakCountdown","progressBarValue","progressBarWidth","appStatus","pauseMessage","includes","message","timeSetting","remainingTime","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,SAASC,WAAT,CAAqB;AAACC,EAAAA,iBAAD;AAAmBC,EAAAA,SAAnB;AAA6BC,EAAAA,cAA7B;AAA4CC,EAAAA,SAA5C;AAAuDC,EAAAA,cAAvD;AAAsEC,EAAAA,gBAAtE;AAAuFC,EAAAA,gBAAvF;AAAwGC,EAAAA;AAAxG,CAArB,EAAyI;AAErI,QAAMC,YAAY,GAAID,SAAS,CAACE,QAAV,CAAmB,OAAnB,IAA8B,QAA9B,GAAyC,EAA/D;AAEA,QAAMC,OAAO,GAAIH,SAAS,CAACE,QAAV,CAAmB,eAAnB,KAAuCF,SAAS,CAACE,QAAV,CAAmB,YAAnB,CAAxC,GAA4E,eAA5E,GAA8F,eAA9G;AACA,QAAME,WAAW,GAAIJ,SAAS,CAACE,QAAV,CAAmB,eAAnB,KAAuCF,SAAS,CAACE,QAAV,CAAmB,YAAnB,CAAxC,GAA4ET,iBAAiB,CAACC,SAAD,CAA7F,GAA2GD,iBAAiB,CAACG,SAAD,CAAhJ;AACA,QAAMS,aAAa,GAAIL,SAAS,CAACE,QAAV,CAAmB,eAAnB,KAAuCF,SAAS,CAACE,QAAV,CAAmB,YAAnB,CAAxC,GAA4EP,cAA5E,GAA6FE,cAAnH;;AAEA,MAAIG,SAAS,KAAK,OAAlB,EAA2B;AACvB,WAAO,EAAP;AACH,GAFD,MAEO;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,qBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCG,OAAjC,OAA2CC,WAA3C,aADJ,eAEI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,qBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCC,aADD,eAFJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,YAAL,CALJ,CADJ,CADJ,eAUA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,KAAK,EAAE;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,SAAS,EAAE,cADf;AAEI,MAAA,IAAI,EAAC,aAFT;AAGI,uBAAc,GAHlB;AAII,uBAAc,KAJlB;AAKI,uBAAeR,gBALnB;AAMI,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAER;AAAT,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,CAVA,CADJ;AA4BH;AAGJ;;AAED,eAAeP,WAAf","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction ProgressBar({minutesToDuration,focusTime,focusCountdown,breakTime, breakCountdown,progressBarValue,progressBarWidth,appStatus}) {\r\n    \r\n    const pauseMessage = (appStatus.includes(\"pause\") ? \"PAUSED\" : \"\")\r\n    \r\n    const message = (appStatus.includes(\"countingFocus\") || appStatus.includes(\"pauseFocus\")) ? \"Focusing for \" : \"On Break for \";\r\n    const timeSetting = (appStatus.includes(\"countingFocus\") || appStatus.includes(\"pauseFocus\")) ? minutesToDuration(focusTime) : minutesToDuration(breakTime);\r\n    const remainingTime = (appStatus.includes(\"countingFocus\") || appStatus.includes(\"pauseFocus\")) ? focusCountdown : breakCountdown;\r\n    \r\n    if (appStatus === \"setup\") {\r\n        return \"\"\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col\">\r\n                        <h2 data-testid=\"session-title\">{message} {timeSetting} minutes</h2>\r\n                        <p className=\"lead\" data-testid=\"session-sub-title\">\r\n                        {remainingTime} remaining\r\n                        </p>\r\n                        <h1>{pauseMessage}</h1>\r\n                    </div>\r\n                </div>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                    <div className=\"progress\" style={{ height: \"20px\" }}>\r\n                        <div\r\n                            className={\"progress-bar\"}\r\n                            role=\"progressbar\"\r\n                            aria-valuemin=\"0\"\r\n                            aria-valuemax=\"100\"\r\n                            aria-valuenow={progressBarValue} \r\n                            style={{ width: progressBarWidth }}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProgressBar;"]},"metadata":{},"sourceType":"module"}